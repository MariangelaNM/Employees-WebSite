@model Employees_Front.Models.Department
@{
	ViewData["Title"] = "Department";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card">
	<div class="card-header">
		@ViewBag.Accion
	</div>
	@if (TempData["ErrorMessage"] != null)
	{
		<div id="alertContainer" class="alert alert-danger">
			<strong>Error! </strong>@TempData["ErrorMessage"]
		</div>

		<script>

			document.addEventListener("DOMContentLoaded", function () {
				var alertContainer = document.getElementById('alertContainer');
				if (alertContainer) {
					alertContainer.style.display = 'block';
				}

				// Add a timer to hide the alert after 3 seconds
				setTimeout(function () {
					if (alertContainer) {
						alertContainer.style.display = 'none';
						TempData["AlertMessage"] = null;
					}
				}, 5000);
			});
		</script>
	}
	<div class="card-body">
		<form asp-action="Post" asp-controller="Department" method="post" onsubmit="beforeSubmit(event)">
			<input type="hidden" asp-for="DepartmentID" />

			<div class="mb-2">
				<label class="form-label">Name</label>
				<input type="text" class="form-control form-control-sm" asp-for="DepartmentName" />
			</div>

			<button type="submit" class="btn btn-success btn-sm">Save</button>
			<a asp-action="Department" asp-controller="Home" class="btn btn-warning btn-sm">Cancel</a>
		</form>


	</div>
</div>
<script>

	function beforeSubmit(event) {
		// Validar campos antes de enviar el formulario
		var departmentName = document.querySelector('[name="DepartmentName"]').value.trim();
		if (departmentName === "") {
			// Marcar el campo en rojo y evitar el envío del formulario
			document.querySelector('[name="DepartmentName"]').classList.add("is-invalid");
			event.preventDefault();
			return;
		}

		saveFormData();
		setTimeout(function () {
			location.reload();
		}, 500);
	}

	function saveFormData() {
		var formData = {
			departmentName: document.querySelector('[name="DepartmentName"]').value,
			departmentID: document.querySelector('[name="DepartmentID"]').value,
		};

		localStorage.setItem('formData', JSON.stringify(formData));
	}

	// Function to restore form data from local storage
	function restoreFormData() {
		var formData = localStorage.getItem('formData');
		if (formData) {
			formData = JSON.parse(formData);

			document.querySelector('[name="DepartmentName"]').value = formData.departmentName;
			document.querySelector('[name="DepartmentID"]').value = formData.departmentID; // Corregir aquí
			localStorage.clear();
		}
	}

	// Restaurar form data al cargar la página
	restoreFormData();

</script>
